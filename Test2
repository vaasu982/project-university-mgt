import java.io.FileWriter; import java.io.IOException; import java.sql.*;

public class QueryToCSVExporter { public static void main(String[] args) { String url = "jdbc:mysql://localhost:3306/your_database"; // Change as needed String user = "your_username"; String password = "your_password"; String query = "SELECT * FROM your_table"; // Change to your dynamic query String csvFilePath = "output.csv";

exportQueryResultToCSV(url, user, password, query, csvFilePath);
}

public static void exportQueryResultToCSV(String url, String user, String password, String query, String csvFilePath) {
    try (Connection conn = DriverManager.getConnection(url, user, password);
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery(query);
         FileWriter writer = new FileWriter(csvFilePath)) {
        
        ResultSetMetaData metaData = rs.getMetaData();
        int columnCount = metaData.getColumnCount();
        
        // Writing the header
        for (int i = 1; i <= columnCount; i++) {
            writer.append(escapeCSV(metaData.getColumnName(i)));
            if (i < columnCount) writer.append(",");
        }
        writer.append("\n");

        // Writing data rows
        while (rs.next()) {
            for (int i = 1; i <= columnCount; i++) {
                writer.append(escapeCSV(rs.getString(i)));
                if (i < columnCount) writer.append(",");
            }
            writer.append("\n");
        }

        System.out.println("CSV file saved: " + csvFilePath);
    } catch (SQLException | IOException e) {
        e.printStackTrace();
    }
}

// Method to escape CSV values
private static String escapeCSV(String value) {
    if (value == null) {
        return "";
    }
    if (value.contains(",") || value.contains("\n") || value.contains(""")) {
        value = value.replace(""", """"); // Escape double quotes
        return """ + value + """; // Enclose in double quotes
    }
    return value;
}

}
[7:27 pm, 25/6/2025] Markandey: Subject: Request to Separate BAIF Road and Kesnand Road Employees in Transport Arrangement

Dear [Transport Team / Manager's Name],

I hope this message finds you well.

I would like to request that employees residing on BAIF Road not be clubbed with those from Kesnand Road in the same transport route. These two locations are in completely opposite directions, and combining them in a single trip significantly increases the commute time — often taking almost double the time to reach home after a long day at work. This has become quite frustrating and exhausting for those of us affected.

Given the number of employees, I believe this can be efficiently managed with a dedicated 6-seater vehicle for the BAIF Road route. It would greatly improve our post-work tra…
[7:28 pm, 25/6/2025] Markandey: Subject: Request to Separate BAIF and Kesnand Road Transport Routes

Dear [Transport Team / Manager's Name],

I’d like to request that BAIF Road employees not be clubbed with those from Kesnand Road in the same transport route. The locations are in opposite directions, and combining them significantly increases commute time, which is quite frustrating after office hours.

This can likely be managed with a dedicated 6-seater for the BAIF Road route. I hope you’ll consider this for a smoother and more efficient travel experience.

Thank you,
[Your Name]
[Employee ID / Department]
