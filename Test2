import java.io.FileWriter; import java.io.IOException; import java.sql.*;

public class QueryToCSVExporter { public static void main(String[] args) { String url = "jdbc:mysql://localhost:3306/your_database"; // Change as needed String user = "your_username"; String password = "your_password"; String query = "SELECT * FROM your_table"; // Change to your dynamic query String csvFilePath = "output.csv";

exportQueryResultToCSV(url, user, password, query, csvFilePath);
}

public static void exportQueryResultToCSV(String url, String user, String password, String query, String csvFilePath) {
    try (Connection conn = DriverManager.getConnection(url, user, password);
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery(query);
         FileWriter writer = new FileWriter(csvFilePath)) {
        
        ResultSetMetaData metaData = rs.getMetaData();
        int columnCount = metaData.getColumnCount();
        
        // Writing the header
        for (int i = 1; i <= columnCount; i++) {
            writer.append(escapeCSV(metaData.getColumnName(i)));
            if (i < columnCount) writer.append(",");
        }
        writer.append("\n");

        // Writing data rows
        while (rs.next()) {
            for (int i = 1; i <= columnCount; i++) {
                writer.append(escapeCSV(rs.getString(i)));
                if (i < columnCount) writer.append(",");
            }
            writer.append("\n");
        }

        System.out.println("CSV file saved: " + csvFilePath);
    } catch (SQLException | IOException e) {
        e.printStackTrace();
    }
}

// Method to escape CSV values
private static String escapeCSV(String value) {
    if (value == null) {
        return "";
    }
    if (value.contains(",") || value.contains("\n") || value.contains(""")) {
        value = value.replace(""", """"); // Escape double quotes
        return """ + value + """; // Enclose in double quotes
    }
    return value;
}

}

Subject: Request to Separate BAIF Road and Kesnand Road Employees in Transport Arrangement

Dear [Transport Team / Manager's Name],

I hope this message finds you well.

I would like to request that employees residing on BAIF Road not be clubbed with those from Kesnand Road in the same transport route. These two locations are in completely opposite directions, and combining them in a single trip significantly increases the commute time — often taking almost double the time to reach home after a long day at work. This has become quite frustrating and exhausting for those of us affected.

Given the number of employees, I believe this can be efficiently managed with a dedicated 6-seater vehicle for the BAIF Road route. It would greatly improve our post-work travel experience and reduce the strain of an already long day.

Thank you for your understanding and support. Looking forward to a positive resolution.


Subject: Request for Separate Transport Route – BAIF Road

Dear [Transport Team / Manager's Name],

I hope you're doing well.

I’d like to highlight the ongoing issue with transport routes. Employees from BAIF Road are being grouped with those from Kesnand and Awhalwadi, even though these areas are in completely opposite directions. This is causing serious delays — yesterday, we reached home around 7:45 PM despite there being no traffic.

After a long day at work, such extended commute times are both frustrating and exhausting. It's becoming increasingly difficult to manage.

A dedicated 6-seater for BAIF Road would make a big difference and help avoid this daily inconvenience.

Thank you for understanding.

Best regards,
[Your Name]

Subject: Request for Separate Transport Route for BAIF Road Residents

Dear [Transport Team / Manager's Name],

I hope this message finds you well.

I would like to request that employees residing on BAIF Road not be grouped with those from Kesnand Road on the same transport route. These locations are in completely opposite directions, and combining them significantly increases the commute time — often nearly doubling the duration it takes to get home after a long workday. This has become increasingly frustrating and exhausting for those of us affected.

Considering the number of employees residing on BAIF Road, I believe a dedicated 6-seater vehicle for this route would be a practical and efficient solution. It would greatly enhance our commuting experience and reduce unnecessary strain at the end of the day.

For example, just yesterday, the BAIF Road, Awhalwadi Road, and Kesnand Road routes were combined, which resulted in a commute time of over double the usual. Despite there being no traffic, we only reached home around 7:45 PM.

Thank you for your understanding and support. I look forward to a positive resolution.

Warm regards,
[Your Name]

Best regards,
[Your Name]
[Employee ID / Department, if needed]

Subject: Request to Separate BAIF and Kesnand Road Transport Routes

Dear [Transport Team / Manager's Name],

I’d like to request that BAIF Road employees not be clubbed with those from Kesnand Road in the same transport route. The locations are in opposite directions, and combining them significantly increases commute time, which is quite frustrating after office hours.

This can likely be managed with a dedicated 6-seater for the BAIF Road route. I hope you’ll consider this for a smoother and more efficient travel experience.

Thank you,
[Your Name]
[Employee ID / Department]


import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

HttpClient httpClient = HttpClient.newHttpClient();

HttpRequest request = HttpRequest.newBuilder()
    .uri(new URI("https://graph.microsoft.com/v1.0/me")) // or your API
    .header("Authorization", "Bearer " + accessToken)
    .GET()
    .build();

HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());

System.out.println("Response: " + response.body());


┌───────────────────────────┐
│   Raw Financial Articles  │
└────────────┬──────────────┘
             │
             ▼
┌──────────────────────────────┐
│ Preprocessing & Cleaning     │
│ - Tokenization               │
│ - Remove noise (HTML, stopwords)│
└────────────┬─────────────────┘
             │
             ▼
┌──────────────────────────────┐
│ Named Entity Recognition     │
│ - Extract sectors/companies  │
│ - Map to GICS/SIC sectors    │
└────────────┬─────────────────┘
             │
             ▼
┌──────────────────────────────┐
│ Sentiment Analysis (FinBERT) │
│ - Article-level & sector-level│
└────────────┬─────────────────┘
             │
             ▼
┌────────────────────────────────────┐
│ Time Aggregation (daily/weekly)   │
│ - Sector sentiment over time      │
└────────────┬──────────────────────┘
             │
             ▼
┌───────────────────────────────────┐
│ Sector Performance Modeling       │
│ - XGBoost / LightGBM              │
│ - Features: sentiment, macro data│
└────────────┬──────────────────────┘
             │
             ▼
┌────────────────────────────┐
│ Portfolio Allocation Logic │
│ - Rule-based / Optimizer   │
│ - Top-K sectors            │
└────────────┬───────────────┘
             │
             ▼
┌────────────────────────────┐
│    Sector Allocation Rec   │
└────────────────────────────┘

